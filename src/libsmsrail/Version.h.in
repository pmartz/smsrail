// Copyright


//
// This file is automatically generated. To make changes, edit
// Version.h.in, then reconfigure using CMake. This will generate
// a new Version.h file containing your changes.
// TO CHANGE THE PROJECT VERSION NUMBER, edit the top-level
// CMakeLists.txt file.
//


#ifndef __SMSRAIL_VERSION_H__
#define __SMSRAIL_VERSION_H__ 1

#include "Export.h"
#include <string>


namespace libsmsrail {


/** \defgroup Version Version utilities */
/*@{*/

#define SMSRAIL_MAJOR_VERSION (@SMSRAIL_MAJOR_VERSION@)
#define SMSRAIL_MINOR_VERSION (@SMSRAIL_MINOR_VERSION@)
#define SMSRAIL_SUB_VERSION (@SMSRAIL_SUB_VERSION@)

/** \brief smsrail version number as an integer

C preprocessor integrated version number
The form is Mmmss, where:
   \li M is the major version
   \li mm is the minor version (zero-padded)
   \li ss is the sub version (zero padded)

Use this in version-specific code, for example:
\code
   #if( SMSRAIL_VERSION < 10500 )
      ... code specific to releases before v1.05
   #endif
\endcode
*/
#define SMSRAIL_VERSION ( \
        ( SMSRAIL_MAJOR_VERSION * 10000 ) + \
        ( SMSRAIL_MINOR_VERSION * 100 ) + \
        SMSRAIL_SUB_VERSION )

/** \brief Run-time access to the smsrail version number

Returns SMSRAIL_VERSION, the smsrail version number as an integer
\see SMSRAIL_VERSION
*/
unsigned int SMSRAIL_EXPORT getVersionNumber();

/** \brief smsrail version number as a string

Example:
\code
smsrail version 1.1.0 (10100)
\endcode
*/
std::string SMSRAIL_EXPORT getVersionString();

/*@}*/


// namespace libsmsrail
}

// __SMSRAIL_VERSION_H__
#endif
