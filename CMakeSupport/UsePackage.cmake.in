#
# This module is provided as @CMAKE_PROJECT_NAME@_USE_FILE by
# @CMAKE_PROJECT_NAME@Config.cmake. It can be included in a
# project to load the needed compiler and linker settings
# to use @CMAKE_PROJECT_NAME@.
#

if( NOT @CMAKE_PROJECT_NAME@_USE_FILE_INCLUDED )
    set( @CMAKE_PROJECT_NAME@_USE_FILE_INCLUDED 1 )

    # Update CMAKE_MODULE_PATH so includes work.
    #set( CMAKE_MODULE_PATH
    #  ${CMAKE_MODULE_PATH}
    #  ${@CMAKE_PROJECT_NAME@_CMAKE_DIR} )

    # Add compiler flags needed to use @CMAKE_PROJECT_NAME@.
    #set( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${@CMAKE_PROJECT_NAME@_REQUIRED_C_FLAGS}" )
    #set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${@CMAKE_PROJECT_NAME@_REQUIRED_CXX_FLAGS}" )
    #set( CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${@CMAKE_PROJECT_NAME@_REQUIRED_EXE_LINKER_FLAGS}" )
    #set( CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} ${@CMAKE_PROJECT_NAME@_REQUIRED_SHARED_LINKER_FLAGS}" )
    #set( CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} ${@CMAKE_PROJECT_NAME@_REQUIRED_MODULE_LINKER_FLAGS}" )

    # Add include directories needed to use @PROJECT_NAME@.
    include_directories(
        ${@CMAKE_PROJECT_NAME@_INCLUDE_DIRS} )
endif()
